
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

// Should return  right view of tree
class Solution
{
    public:
    vector<int> rightonly(Node* root){
        vector<int>v;
        queue<Node*>q;
        if(root==NULL)
        return v;
        
        q.push(root);
        
        while(!q.empty()){
            int size=q.size();
            for(int i=0;i<size;i++){
                root=q.front();
                q.pop();
                if(i==0)
                v.push_back(root->data);
                if(root->right)
                q.push(root->right);
                if(root->left)
                q.push(root->left);
            }
        }
        return v;
    }
    //Function to return list containing elements of right view of binary tree.
    vector<int> rightView(Node *root)
    {
       // Your Code here
       vector<int>v;
       v=rightonly(root);
       return v;
    }
};
