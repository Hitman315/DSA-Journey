
/* Tree node structure

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
};*/

//Function to return a tree created from postorder and inoreder traversals.
int findpos(int in[],int n,int element){
        for(int i=0;i<n;i++){
            if(in[i]==element){
                return i;
            }
        }
        return -1;
    }
    
     Node* solve(int in[],int post[],int n,int &index,int instart,int inend){
        if(index<0 || instart>inend)
        return NULL;
        
        int element=post[index--];
        Node* root=new Node(element);
        int position=findpos(in,n,element);
        
        root->right=solve(in,post,n,index,position+1,inend);
        root->left=solve(in,post,n,index,instart,position-1);
        
        
        return root;
    }
    
Node *buildTree(int in[], int post[], int n) {
    // Your code here
      int  postindex=n-1;
        int instart=0;
        int inend=n-1;
        Node* ans=solve(in,post,n,postindex,instart,inend);
        return ans;
}