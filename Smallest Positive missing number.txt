Approach 1:
class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        // Your code here
        int maxi=INT_MIN;
        for(int i=0;i<n;i++){
            if(arr[i]>maxi)
            maxi=arr[i];
        }
        
        int a[maxi+1]={0};
        for(int i=0;i<n;i++){
            if(arr[i]>0){
                a[arr[i]]++;
            }
        }
        int ans=0;
        for(int i=1;i<=maxi;i++){
            if(a[i]==0){
                return i;
            }
        }
        return maxi+1;
    } 
};

Approach 2:

class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        // Your code here
        sort(arr,arr+n);
        int ans=1;
        for(int i=0;i<n;i++){
            if(arr[i]==ans){
                ans++;
            }
        }
        return ans;
    } 
};

Approach 3:

class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        for(int i=0;i<n;i++){
            while(arr[i]>=1 && arr[i]<=n && arr[i]!=arr[arr[i]-1]){
                swap(arr[i],arr[arr[i]-1]);
            }
        }
        
        for(int i=0;i<n;i++){
            if(arr[i]!=i+1){
                return i+1;
            }
        }
        return n+1;
    } 
};