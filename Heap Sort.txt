// in increasing order when heapSort() is called.

// in increasing order when heapSort() is called.

class Solution
{
    public:
    //Heapify function to maintain heap property.
    void heapify(int arr[], int n, int i)  
    {
      // Your Code Here
      int largest=i;
      int leftindex=2*i+1;
      int rightindex=2*i+2;
      if(leftindex<n && arr[leftindex]>arr[largest]){
          
          largest=leftindex;
      }
      if(rightindex<n && arr[rightindex]>arr[largest]){
          
          largest=rightindex;
      }
      
      if(largest!=i){
          swap(arr[largest],arr[i]);
          heapify(arr,n,largest);
      }
    }

    public:
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  
    { 
    // Your Code Here
    for(int i=n/2-1;i>=0;i--){
        heapify(arr,n,i);
    }
}
    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n)
    {
        //code here
        buildHeap(arr,n);
        int size=n-1;
        while(size>0){
            swap(arr[size],arr[0]);
            
            heapify(arr,size,0);
           size--;
        }
         
    }
};

