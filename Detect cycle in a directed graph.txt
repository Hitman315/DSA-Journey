 
  bool dfs(int i, vector<int> adj[], vector<int> &vis)
    {
        vis[i] = 2;
        
        for(auto n : adj[i])
        {
            if(vis[n] == 0)
            {
                if(dfs(n, adj, vis)) return true;
            }
            else if (vis[n] == 2) return true;
        }
        
           vis[i] = 1;
        return false;
    }
    
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int> vis (V, 0);
        
        for(int i = 0; i < V; i++)
        {
            if(!vis[i]) 
            {
                if(dfs(i, adj, vis)) return true;
            }
        }
        return false;
    }
};