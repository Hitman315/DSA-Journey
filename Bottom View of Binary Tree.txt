
class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
          //Your code here
        vector<int>ans;
        if(root==NULL)
        return ans;
        
        //map<hd,node->data>mp;
        map<int,int>mp;
        
        //pair<root,hd>
        queue<pair<Node*,int>> q;
        
        //at first we will store root node in queue and hd will be 0 at first;
        q.push(make_pair(root,0));
        
        while(!q.empty()){
            pair<Node*,int> temp=q.front();
            q.pop();
            
            Node *frontNode=temp.first;
            int hd=temp.second;
            
            
           
            //mapping hd and node data
            mp[hd]=frontNode->data;
            
            if(frontNode->left)
            q.push(make_pair(frontNode->left,hd-1));
            
            if(frontNode->right)
            q.push(make_pair(frontNode->right,hd+1));
        }
        
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return ans;
    }
};