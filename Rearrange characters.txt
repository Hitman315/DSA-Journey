{
    public:
    string rearrangeString(string str)
    {
        //code here
         int n=str.size();
        //Add the letter and count in map
        unordered_map<char,int>mp;
        for(int i=0;i<n;i++){
            mp[str[i]]++;
        }
        //Add the count and letter in priority queue since pq arranges from 1st so 
        //we have add in reverse letter
        priority_queue<pair<int,char>>pq;
        for(auto it:mp){
            pq.push({it.second,it.first});
        }
        //Check if the pq.top().first occurance of letter is greater than n/2
        if(pq.top().first>ceil(n/2.0))
        return "-1";
        
        string ans="";
        while(n>1){
            pair<int,char>val1=pq.top();
            pq.pop();
            pair<int,char>val2=pq.top();
            pq.pop();
            ans+=val1.second;
            ans+=val2.second;
            //Checking after decreasing after the count by 1 if it is still greater
            //than 0 then we will push it again by decreasing its count by 1;
            if(val1.first-1>0){
                pq.push({val1.first-1,val1.second});
            }
             if(val2.first-1>0){
                pq.push({val2.first-1,val2.second});
            }
            //Since we are using 2 letter or adding two letter in ans variable
            //so we will be decreasing length of string by 2;
            n=n-2;
        }
        //After loop is break ans if string have one value then we will simply 
        //add to the ans variable and return it;
        if(n){
            ans+=pq.top().second;
        }
        return ans;
    }
    
};